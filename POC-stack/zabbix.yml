- hosts: centos2
  become: yes
  become_user: root
  vars_prompt:
    - name: Mysqlserver
      prompt: what is sql server ipaddress
      private: no
  tasks:
   - name: Disable SELinux
     selinux:
       state: disabled

   - name: Get the server IP address
     command: curl http://checkip.amazonaws.com
     register: pubipaddress   

   - name: Disable firewalld
     service:
       name: firewalld
       state: stopped
       enabled: false

   - name: Get the server IP address
     shell: hostname -I | awk '{print $1}'
     register: Ipaddress   

   - name: get the msql details
     copy:
       src: /root/{{item}}
       dest: /tmp/
     with_items:
       - Password-{{Mysqlserver}}
       - Password-{{Mysqlserver}}-zabbix
       - Password-{{Mysqlserver}}-wolf
       - Password-{{Mysqlserver}}-mysql
       - Password-{{Ipaddress.stdout}}-rabbitmq
    
   - name: Generate the Zabbix Admin password
     shell: openssl rand -base64 16
     register: zabbix_Admin_pass

   - name: Generate the Zabbix Admin password
     shell: openssl rand -base64 16
     register: zabbix_stackbill_pass   

   - name: get the msql details
     command: cat /tmp/Password-{{Mysqlserver}}
     register: ip

   - name: get the msql details
     command: cat /tmp/Password-{{Mysqlserver}}-zabbix
     register: dbp

   - name: get the msql details
     command: cat /tmp/Password-{{Ipaddress.stdout}}-rabbitmq
     register: rabbitmq

   - name: get the msql details
     command: cat /tmp/Password-{{Mysqlserver}}-mysql
     register: mysql     

   - name: Install supporting yums
     yum:
       name:
         - httpd
         - php 
         - php-cli 
         - php-common 
         - php-devel 
         - php-pear
         - php-gd
         - php-mbstring
         - php-mysql
         - php-xml
         - unzip
         - zip
         - MySQL-python
       state: present

    
    
   - name: start the apache service
     service:
        name: httpd
        state: started
        enabled: yes

   - name: Import the Rpm key Zabbix
     rpm_key:
       state: present
       key: http://repo.zabbix.com/RPM-GPG-KEY-ZABBIX

   - name: Create a directory
     file:
       path: /root/zabbix/
       state: directory

   - name: Download zabbix Rpms
     get_url:
       url: "{{ item }}"
       dest: /root/zabbix/
     with_items:
       - https://sp-poc.s3.amazonaws.com/Zabbix-RPM/fping-3.10-1.el7.x86_64.rpm
       - https://sp-poc.s3.amazonaws.com/Zabbix-RPM/iksemel-1.4-2.el7.centos.x86_64.rpm
       - https://sp-poc.s3.amazonaws.com/Zabbix-RPM/iksemel-devel-1.4-2.el7.centos.x86_64.rpm
       - https://sp-poc.s3.amazonaws.com/Zabbix-RPM/iksemel-utils-1.4-2.el7.centos.x86_64.rpm
       - https://sp-poc.s3.amazonaws.com/Zabbix-RPM/zabbix-agent-3.4.15-1.el7.x86_64.rpm
       - https://sp-poc.s3.amazonaws.com/Zabbix-RPM/zabbix-server-mysql-3.4.15-1.el7.x86_64.rpm
       - https://sp-poc.s3.amazonaws.com/Zabbix-RPM/zabbix-web-3.4.15-1.el7.noarch.rpm
       - https://sp-poc.s3.amazonaws.com/Zabbix-RPM/zabbix-web-mysql-3.4.15-1.el7.noarch.rpm

   - name: Install Zabbix rpms
     yum:
       name:
         - gnutls-devel
         - /root/zabbix/fping-3.10-1.el7.x86_64.rpm
         - /root/zabbix/iksemel-1.4-2.el7.centos.x86_64.rpm
         - /root/zabbix/iksemel-devel-1.4-2.el7.centos.x86_64.rpm
         - /root/zabbix/iksemel-utils-1.4-2.el7.centos.x86_64.rpm
         - /root/zabbix/zabbix-agent-3.4.15-1.el7.x86_64.rpm
         - /root/zabbix/zabbix-server-mysql-3.4.15-1.el7.x86_64.rpm
         - /root/zabbix/zabbix-web-3.4.15-1.el7.noarch.rpm
         - /root/zabbix/zabbix-web-mysql-3.4.15-1.el7.noarch.rpm
       state: present

   - name: Remove the zbbix directory
     file:
       path: /root/zabbix/
       state: absent

   - name: create a copy of the zabbix conf
     copy:
       src: /etc/httpd/conf.d/zabbix.conf
       dest: /etc/httpd/conf.d/zabbix.conf_orig
       remote_src: yes

   - name: Replace the zabbix config
     replace:
       path: /etc/httpd/conf.d/zabbix.conf
       regexp: "{{item.find}}"
       replace: "{{item.replace}}"
     with_items:
       - {find: ' # php_value date.timezone Europe/Riga', replace: php_value date.timezone Asia/Kolkata }

   - name: Restart apache
     service:
       name: httpd
       state: reloaded

   - name: Install supporting yums
     yum:
       name: mysql
       state: present

   - name:  Find database
     shell: find /usr/share/ -name create.sql.gz 
     register: create

   - name: Copy the zabbix-rabbit
     copy:
       src: '{{create.stdout}}'
       dest: /root
       remote_src: yes

   - name: unzip the zabbix initial database
     shell: gunzip /root/create.sql.gz --force

   - name: Restore database
     mysql_db:
       name: zabbix
       login_host: '{{Mysqlserver}}'
       login_password: '{{dbp.stdout}}'
       login_user: zabbix
       state: import
       target: /root/create.sql
     ignore_errors: yes


   - name: create a copy of the zabbix_server conf
     copy:
       src: /etc/zabbix/zabbix_server.conf
       dest: /etc/zabbix/zabbix_server.conf_orig
       remote_src: yes

   - name: Replace the zabbix config
     lineinfile:
       path: /etc/zabbix/zabbix_server.conf
       regexp: "{{item.find}}"
       line: "{{item.replace}}"
     with_items:
       - {find: 'DBHost=', replace: 'DBHost= {{Mysqlserver}}' }
       - {find: 'DBName=', replace: 'DBName= zabbix' }
       - {find: 'DBUser=', replace: 'DBUser= zabbix' }
       - {find: 'DBPassword=', replace: 'DBPassword= {{dbp.stdout}}' }

   - name: create a copy of the zabbix.conf.php
     copy:
       src: zabbix.conf.php
       dest: /etc/zabbix/web/

   - name: Replace the zabbix config
     replace:
       path: /etc/zabbix/web/zabbix.conf.php
       regexp: "{{item.find}}"
       replace: "{{item.replace}}"
     with_items:
       - {find: "ip", replace: "{{Mysqlserver}}" }
       - {find: "dbp", replace: "{{dbp.stdout}}"}

   - name: Change the owership
     command: chown apache.apache /etc/zabbix/web/zabbix.conf.php

   - name: Install epel-release
     yum:
       name: epel-release
       state: present

   - name: Install python
     yum:
       name:
         - python2-pika
         - python-setuptools
         - python-pip
       state: present      
        
   - name: install zabbix api
     pip:
      name: zabbix-api 
   - name: Create a directory
     file:
       path: /root/zabbixfiles
       state: directory

   - name: Download zabbix Rpms
     get_url:
       url: "{{ item }}"
       dest: /root/zabbixfiles
     with_items:
       - https://sp-poc.s3.amazonaws.com/Zabbix-Customisation/.graph-key
       - https://sp-poc.s3.amazonaws.com/Zabbix-Customisation/charts-iframe-logout.php
       - https://sp-poc.s3.amazonaws.com/Zabbix-Customisation/charts-iframe.php
       - https://sp-poc.s3.amazonaws.com/Zabbix-Customisation/page_header.php
       - https://sp-poc.s3.amazonaws.com/Zabbix-Customisation/zabbix-rabbitmq.py

   - name: Copy PHP files to required location
     copy:
       src: /root/zabbixfiles/{{item}}
       dest: /usr/share/zabbix/
     remote_src: yes
     with_items:
       - charts-iframe.php
       - charts-iframe-logout.php

   - name: Copy PHP files to required location
     copy:
       src: /usr/share/zabbix/include/page_header.php
       dest: /usr/share/zabbix/include/page_header.php_orig
       remote_src: yes

   - name: Copy PHP files to required location
     copy:
       src: /root/zabbixfiles/page_header.php
       dest: /usr/share/zabbix/include/
      
       remote_src: yes

   - name: Copy PHP files to required location
     copy:
       src: /root/zabbixfiles/zabbix-rabbitmq.py
       dest: /usr/lib/zabbix/alertscripts/
      
       remote_src: yes

   - name: Copy PHP files to required location
     copy:
       src: /root/zabbixfiles/.graph-key
       dest: /usr/share/zabbix/
      
       remote_src: yes

   - name: Replace the rabbitmq
     replace:
       path: /usr/lib/zabbix/alertscripts/zabbix-rabbitmq.py
       regexp: "{{item.find}}"
       replace: "{{item.replace}}"
     with_items:
       - {find: "('mqadmin', 'mqadmin')", replace: "('mqadmin', '{{rabbitmq.stdout}}')" }
       - {find: 'rabbitMqUrl = "10.30.11.23"', replace: 'rabbitMqUrl = "{{Ipaddress.stdout}}"' }

   - name: set the execute permssion
     command: chmod +x /usr/lib/zabbix/alertscripts/zabbix-rabbitmq.py

   - name: retart the zabbix
     service: 
       name: zabbix-server
       state: restarted
       enabled: yes

   - name: Copy the  Zabbix web conf file 
     copy:
        src: zbx_export_templates.xml
        dest: /root/

   - name: Creating a templates group 
     zabbix_group:
        server_url: http://127.0.0.1/zabbix
        login_user: Admin
        login_password: zabbix
        host_groups:
            - Templates/Wolf-Monitoring
        state: present
      
   - name: Import Zabbix templates from XML
     zabbix_template:
        server_url: http://127.0.0.1/zabbix
        login_user: Admin
        login_password: zabbix
        template_xml: "{{ lookup('file', 'zbx_export_templates.xml') }}"
        state: present

   - name: 'Create a script mediatype'
     zabbix_mediatype:
        name: "zabbix-rabbitmq"
        server_url: "http://127.0.0.1/zabbix/"
        login_user: Admin
        login_password: zabbix
        type: 'script'
        script_name: 'zabbix-rabbitmq.py'
        script_params:
          - 'zabbix'
          - '{ALERT.SUBJECT}'
          - '{ALERT.MESSAGE}'

   - name: Update a new zabbix user
     community.zabbix.zabbix_user:
        server_url: "http://127.0.0.1/zabbix/"
        login_user: Admin
        login_password: zabbix
        username: Admin
        name: Admin
        surname: Administrator
        usrgrps:
          - Zabbix administrators
        override_passwd: yes
        passwd: '{{zabbix_Admin_pass.stdout}}'
        lang: en_GB
        theme: blue-theme
        autologin: no
        autologout: '0'
        refresh: '30'
        rows_per_page: '200'
        after_login_url: ''
        user_medias:
          - mediatype: zabbix-rabbitmq
            sendto: admin@assistanz.com
            period: 1-7,00:00-24:00
            severity:
              not_classified: yes
              information: yes
              warning: yes
              average: yes
              high: yes
              disaster: yes
            active: yes
        state: present

   - name: create a new zabbix user.
     community.zabbix.zabbix_user:
       server_url: "http://127.0.0.1/zabbix/"
       login_user: Admin
       login_password: '{{zabbix_Admin_pass.stdout}}'
       username: adminstackbill
       name: adminstackbill
       surname: adminstackbill
       usrgrps:
          - Zabbix administrators
       passwd: '{{zabbix_stackbill_pass.stdout}}'
       lang: en_GB
       theme: blue-theme
       autologin: no
       autologout: '0'
       refresh: '30'
       rows_per_page: '200'
       after_login_url: ''
       user_medias:
          - mediatype: zabbix-rabbitmq
            sendto: admin@assistanz.com
            period: 1-7,00:00-24:00
            severity:
              not_classified: yes
              information: yes
              warning: yes
              average: yes
              high: yes
              disaster: yes
            active: yes
       state: present      

   - debug:
       msg: '{{zabbix_Admin_pass.stdout}}'


   - name: Deploy trigger action
     zabbix_action:
        server_url: "http://127.0.0.1/zabbix/"
        login_user: Admin
        login_password: '{{zabbix_Admin_pass.stdout}}'
        name: "Report problems to Zabbix administrators"
        event_source: 'trigger'
        state: present
        status: enabled
        esc_period: 60
        default_subject: "{TRIGGER.STATUS} | {TRIGGER.NAME}"
        default_message: "{TRIGGER.STATUS} | {TRIGGER.NAME} | {HOST.NAME} | {TRIGGER.SEVERITY} | {ITEM.VALUE} | {ITEM.KEY} | {TRIGGER.ID} | {ACTION.ID} | {EVENT.DATE} | {EVENT.TIME} | {EVENT.RECOVERY.VALUE} | {EVENT.RECOVERY.DATE} | {EVENT.RECOVERY.TIME} | {TRIGGER.DESCRIPTION} | {EVENT.RECOVERY.ID}"
        operations:
          - type: send_message
            media_type: 'zabbix-rabbitmq'
            send_to_users:
              - 'Admin'
        recovery_default_subject: "{TRIGGER.STATUS} | {TRIGGER.NAME}"
        recovery_default_message : "{TRIGGER.STATUS} | {TRIGGER.NAME} | {HOST.NAME} | {TRIGGER.SEVERITY} | {ITEM.VALUE} | {ITEM.KEY} | {TRIGGER.ID} | {ACTION.ID} | {EVENT.DATE} | {EVENT.TIME} | {EVENT.RECOVERY.VALUE} | {EVENT.RECOVERY.DATE} | {EVENT.RECOVERY.TIME} | {TRIGGER.DESCRIPTION} | {EVENT.RECOVERY.ID}"
        recovery_operations:
          - type: send_message
            media_type: 'zabbix-rabbitmq'
            send_to_users:
            - 'Admin'
   - debug:
          msg: '{{zabbix_stackbill_pass.stdout}}'
 

   - name: Create a directory
     file:
       path: /root/Password-{{Ipaddress.stdout}}
       state: directory       

   - name: Password file
     shell: echo "{{Ipaddress.stdout}}"  >> /root/Password-{{Ipaddress.stdout}}/Password-{{Ipaddress.stdout}}-pvtipZabbix

   - name: Password file
     shell: echo "{{pubipaddress.stdout}}"  >> /root/Password-{{Ipaddress.stdout}}/Password-{{Ipaddress.stdout}}-zabbixadmin
                  
   - name: Password file
     shell: echo "{{pubipaddress.stdout}}"  >> /root/Password-{{Ipaddress.stdout}}/Password-{{Ipaddress.stdout}}-publicipZabbix

   - name: Password file
     shell: echo "{{zabbix_stackbill_pass.stdout}}"  >> /root/Password-{{Ipaddress.stdout}}/Password-{{Ipaddress.stdout}}-zabbix_stackbill_pass

   - name: Copy password file
     fetch:
        src: /root/Password-{{Ipaddress.stdout}}/{{item}}
        dest: /root/
        flat: yes
     with_items:
       - Password-{{Ipaddress.stdout}}-pvtipZabbix
       - Password-{{Ipaddress.stdout}}-zabbixadmin
       - Password-{{Ipaddress.stdout}}-publicipZabbix
       - Password-{{Ipaddress.stdout}}-zabbix_stackbill_pass
 