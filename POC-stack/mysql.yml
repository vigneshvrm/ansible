- hosts: sbdb
  become: yes
  become_user: root
  tasks:
   - name: Disable SELinux
     selinux:
       state: disabled

   - name: Get the server IP address
     shell: hostname -I | awk '{print $1}'
     register: Ipaddress
    
   - name: Get the server IP address
     command: curl http://checkip.amazonaws.com
     register: pubipaddress
   
  #  - name: clean packages
  #    command: yum update -y  

  #  - name: Get the server IP address
  #    shell: hostname -I | awk '{print $1}'
  #    register: hostname
 
   - name: Generate the Mysql user password
     shell:  gpg --gen-random --armor 1 20
     register: mysql1_user_pass

   - name: Generate the Mysql user password
     shell:  gpg --gen-random --armor 1 20
     register: mysql_user_pass

   - name: Generate the Mysql Root password
     shell:  gpg --gen-random --armor 1 25
     register: mysql_root_pass

   - name: Import the Rpm key mysql
     rpm_key:
       state: present
       key: https://repo.mysql.com/RPM-GPG-KEY-mysql-2022

   - name: Install yum-utils
     yum:
       name: yum-utils
       state: present       
    
   - name: Install MySQL 5.7 repo
     shell: rpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm 
    
   - name: Install MySQL 5.7
     shell: yum install mysql-community-server -y

   - name: Start the service
     service:
       name: mysqld
       state: started
       enabled: yes
    
   - name: Add mysql python support for RedHat family
     yum: name=MySQL-python state=installed

   - name: Mysql Root password 
     shell: grep "A temporary password" /var/log/mysqld.log  |awk '{print $11}'
     register:  password
 

   - name: root | set root password
     shell: >-
          mysqladmin -u root
          --password="{{password.stdout}}"
          password "{{mysql_root_pass.stdout}}"

   - name: Create a .my.cnf file
     file:
       path: /root/.my.cnf
       state: touch
       owner: root 
       group: root 
       mode: 0600


   - name: Add .my.cnf
     lineinfile: 
       path: /root/.my.cnf
       line: "{{ item }}"
     with_items:
       - "[client]"
       - user=root
       - password={{mysql_root_pass.stdout}}


   - name: Reload privilege tables
     command: 'mysql -ne "{{ item }}"'
     with_items:
       - FLUSH PRIVILEGES
     changed_when: False

   - name: Remove anonymous users
     mysql_user:
       login_user: root
       login_password: "{{ mysql_root_pass.stdout }}"
       user: ''
       host_all: yes
       state: absent

   - name: Disallow root login remotely
     mysql_user:
      login_user: root
      login_password: "{{ mysql_root_pass.stdout }}"
      user: root
      host: "'localhost', '127.0.0.1', '::1'"
      state: absent

   - name: Remove test database and access to it
     mysql_db: 
      login_user: root
      login_password: "{{ mysql_root_pass.stdout }}"
      db: test
      state: absent
     register: remove_testdb

   - name: Reload privilege tables
     command: 'mysql -ne "{{ item }}"'
     with_items:
        - SET GLOBAL validate_password_policy=LOW;
        - FLUSH PRIVILEGES
     changed_when: False

   - name: Add the Wolf database
     command: 'mysql -ne "{{ item }}"'
     with_items:
         - CREATE SCHEMA `wolf` DEFAULT CHARACTER SET utf8;
         - CREATE USER 'stackbill'@'localhost' IDENTIFIED BY '{{mysql_user_pass.stdout}}';
         - GRANT ALL PRIVILEGES ON wolf.* TO 'stackbill'@'localhost';
         - FLUSH PRIVILEGES;
     changed_when: False

   - name: Add the Zabbix database
     command: 'mysql -ne "{{ item }}"'
     with_items:
         - CREATE USER 'zabbix'@'%' IDENTIFIED BY '{{mysql1_user_pass.stdout}}';
         - CREATE DATABASE zabbix CHARACTER SET utf8 COLLATE  utf8_bin;
         - GRANT ALL PRIVILEGES ON zabbix.* TO 'zabbix'@'%';
         - FLUSH PRIVILEGES;
     changed_when: False

   - name: 'Add sql_modein my.cnf'
     lineinfile:
       path: /etc/my.cnf
       insertafter: '^[mysqld]'
       line: 'sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES'

   - name: 'Add bind my.cnf'
     lineinfile:
       path: /etc/my.cnf
       insertafter: '^[mysqld]'
       line: 'bind-address= 0.0.0.0'

   - name: 'Add wait_timeout my.cnf'
     lineinfile:
       path: /etc/my.cnf
       insertafter: '^[mysqld]'
       line: 'wait_timeout = 28800'

   - name: 'Add interactive_timeout my.cnf'
     lineinfile:
       path: /etc/my.cnf
       insertafter: '^[mysqld]'
       line: 'interactive_timeout = 230400'

   - name: 'Add wait_timeout my.cnf'
     lineinfile:
       path: /etc/my.cnf
       insertafter: '^[mysqld]'
       line: 'wait_timeout = 28800'

   - name: 'Add connect_timeout my.cnf'
     lineinfile:
       path: /etc/my.cnf
       insertafter: '^[mysqld]'
       line: 'connect_timeout = 36000'

   - name: 'Add max_connections my.cnf'
     lineinfile:
       path: /etc/my.cnf
       insertafter: '^[mysqld]'
       line: 'max_connections = 1000'
  
   - name: restart mysql
     service: name=mysqld state=restarted

   - name: Create a directory
     file:
       path: /root/Password-{{Ipaddress.stdout}}
       state: directory

   - name: Password file
     shell: echo "{{mysql_root_pass.stdout}}"  >> /root/Password-{{Ipaddress.stdout}}/Password-{{Ipaddress.stdout}}-mysql
   
   - name: Password file
     shell: echo "{{mysql_user_pass.stdout}}"  >> /root/Password-{{Ipaddress.stdout}}/Password-{{Ipaddress.stdout}}-wolf

   - name: Password file
     shell: echo "{{mysql1_user_pass.stdout}}" >> /root/Password-{{Ipaddress.stdout}}/Password-{{Ipaddress.stdout}}-zabbix
   
   - name: Password file
     shell: echo "{{Ipaddress.stdout}}"  >> /root/Password-{{Ipaddress.stdout}}/Password-{{Ipaddress.stdout}}

   - name: Password file
     shell: echo "{{pubipaddress.stdout}}"  >> /root/Password-{{Ipaddress.stdout}}/Password-{{Ipaddress.stdout}}-public
   
   - name: Copy password file
     fetch:
        src: /root/Password-{{Ipaddress.stdout}}/{{item}}
        dest: /root/
        flat: yes
     with_items:
       - Password-{{Ipaddress.stdout}}
       - Password-{{Ipaddress.stdout}}-zabbix
       - Password-{{Ipaddress.stdout}}-wolf
       - Password-{{Ipaddress.stdout}}-mysql
       - Password-{{Ipaddress.stdout}}-public
   

   - name: password
     debug:
        msg: Mysql Root Password is {{mysql_root_pass.stdout}}

   - name: password
     debug:
        msg: Wolf  Password is {{mysql_user_pass.stdout}}

   - name: password
     debug:
        msg: zabbix  Password is {{mysql1_user_pass.stdout}}        