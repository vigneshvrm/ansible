
- name: Get the server IP address
  shell: hostname -I | awk '{print $1}'
  register: hostname

- name: Install openssl for Password
  apt:
    name: openssl
    state: present

- name: Generate the Mysql user password
  shell: openssl rand -base64 16
  register: mysql_user_pass

- name: Download MySQL config
  get_url:
    url: https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
    dest: /tmp/mysql-apt-config_0.8.12-1_all.deb
  tags: mysql config
  
- name: select version os
  shell: echo mysql-apt-config mysql-apt-config/repo-codename select bionic | sudo debconf-set-selections;
- name: select version mysql
  shell: echo mysql-apt-config mysql-apt-config/select-server select mysql-5.7 | sudo debconf-set-selections;
- name: select tools
  shell: echo mysql-apt-config mysql-apt-config/select-tools select Enabled | sudo debconf-set-selections;
- name: select preview
  shell: echo mysql-apt-config mysql-apt-config/select-preview select Disabled | sudo debconf-set-selections;

- name: select product ok
  shell: echo mysql-apt-config mysql-apt-config/select-product select Ok | sudo debconf-set-selections;

- name: DPKG Binary Package
  shell: dpkg -i /tmp/mysql-apt-config_0.8.12-1_all.deb
  environment:
    DEBIAN_FRONTEND: noninteractive
  register: res_apt

- name: Add the key
  shell: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 467B942D3A79BD29

- name: Update repo
  shell: apt update
  register: apt_update

- name: Install mysql client 5.7
  shell: apt install mysql-client=5.7* -y

- name: set root password
  shell: echo mysql-server mysql-server/root_password password rootpw | sudo debconf-set-selections;

- name: conform root password
  shell: echo mysql-server mysql-server/root_password_again password rootpw | sudo debconf-set-selections;

- name: Install community server
  shell: apt install mysql-community-server=5.7* -y
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Install mysql-server 5.7
  shell: apt install mysql-server=5.7* -y

- name: 'Add sql_modein my.cnf'
  lineinfile:
    path: /etc/my.cnf
    insertafter: '^[mysqld]'
    line: 'sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES'

- name: 'Add bind my.cnf'
  lineinfile:
    path: /etc/my.cnf
    insertafter: '^[mysqld]'
    line: 'bind-address= 0.0.0.0'

- name: Start the service
  shell: "{{item}}"
  with_items:
    - systemctl start mysql
    - systemctl enable mysql.service    

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - SET GLOBAL sql_mode = 'NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES';
  changed_when: False

- name: Add Mysql user
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - CREATE USER 'stackbill'@'%' IDENTIFIED BY '{{mysql_user_pass.stdout}}';
  changed_when: False

- name: Create new databases
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - CREATE DATABASE acqio; CREATE DATABASE mobbex; CREATE DATABASE wolf;
  changed_when: False

- name: Providing privileges 
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - GRANT ALL PRIVILEGES ON *.* TO 'stackbill'@'%';
  changed_when: False

- name: Copy database dump file
  copy:
    src: migration.sql
    dest: /tmp

- name: Restore mysql Table
  shell: mysql wolf < /tmp/migration.sql

- name: Install mysql in Centos
  import_tasks: mysql_secure_installation.yaml  

- name: Password file
  shell: echo Mysql User password is "{{mysql_user_pass.stdout}}" >> /root/{{hostname.stdout}}

- name: Copy password file
  fetch:
    src: /root/{{hostname.stdout}}
    dest: /root/
    flat: yes
  
